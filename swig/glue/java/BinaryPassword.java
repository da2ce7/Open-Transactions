/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opentransactions.otapi;

public class BinaryPassword extends Password {
  private long swigCPtr;

  protected BinaryPassword(long cPtr, boolean cMemoryOwn) {
    super(otapiJNI.BinaryPassword_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(BinaryPassword obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        otapiJNI.delete_BinaryPassword(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public BinaryPassword() {
    this(otapiJNI.new_BinaryPassword__SWIG_0(), true);
  }

  public BinaryPassword(SWIGTYPE_p_std__vectorT_unsigned_char_secure_allocatorT_unsigned_char_t_t data) {
    this(otapiJNI.new_BinaryPassword__SWIG_1(SWIGTYPE_p_std__vectorT_unsigned_char_secure_allocatorT_unsigned_char_t_t.getCPtr(data)), true);
  }

  public SWIGTYPE_p_std__vectorT_unsigned_char_secure_allocatorT_unsigned_char_t_t getCopy() {
    return new SWIGTYPE_p_std__vectorT_unsigned_char_secure_allocatorT_unsigned_char_t_t(otapiJNI.BinaryPassword_getCopy(swigCPtr, this), true);
  }

  public BinaryPassword(SWIGTYPE_p_void data, long length) {
    this(otapiJNI.new_BinaryPassword__SWIG_2(SWIGTYPE_p_void.getCPtr(data), length), true);
  }

  public void append(SWIGTYPE_p_void data, long length) {
    otapiJNI.BinaryPassword_append(swigCPtr, this, SWIGTYPE_p_void.getCPtr(data), length);
  }

  public SWIGTYPE_p_std__pairT_void_pconst_size_t_const_t getMemoryCopy() {
    return new SWIGTYPE_p_std__pairT_void_pconst_size_t_const_t(otapiJNI.BinaryPassword_getMemoryCopy__SWIG_0(swigCPtr, this), true);
  }

  public void getMemoryCopy(SWIGTYPE_p_p_void data, SWIGTYPE_p_size_t length) {
    otapiJNI.BinaryPassword_getMemoryCopy__SWIG_1(swigCPtr, this, SWIGTYPE_p_p_void.getCPtr(data), SWIGTYPE_p_size_t.getCPtr(length));
  }

  public void getMemoryCopyOnto(SWIGTYPE_p_void data, long length) {
    otapiJNI.BinaryPassword_getMemoryCopyOnto(swigCPtr, this, SWIGTYPE_p_void.getCPtr(data), length);
  }

  public SWIGTYPE_p_std__basic_stringT_char_std__char_traitsT_char_t_secure_allocatorT_char_t_t toString() {
    return new SWIGTYPE_p_std__basic_stringT_char_std__char_traitsT_char_t_secure_allocatorT_char_t_t(otapiJNI.BinaryPassword_toString(swigCPtr, this), true);
  }

  public long length() {
    return otapiJNI.BinaryPassword_length(swigCPtr, this);
  }

  public void resize(long nNewSize) {
    otapiJNI.BinaryPassword_resize(swigCPtr, this, nNewSize);
  }

  public void zero() {
    otapiJNI.BinaryPassword_zero(swigCPtr, this);
  }

  public boolean randomize(long nNewSize) {
    return otapiJNI.BinaryPassword_randomize__SWIG_0(swigCPtr, this, nNewSize);
  }

  public boolean randomize() {
    return otapiJNI.BinaryPassword_randomize__SWIG_1(swigCPtr, this);
  }

}
