/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opentransactions.otapi;

public class OTPassword {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected OTPassword(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(OTPassword obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        otapiJNI.delete_OTPassword(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public static boolean randomizeData(SWIGTYPE_p_std__vectorT_unsigned_char_secure_allocatorT_unsigned_char_t_t vData) {
    return otapiJNI.OTPassword_randomizeData(SWIGTYPE_p_std__vectorT_unsigned_char_secure_allocatorT_unsigned_char_t_t.getCPtr(vData));
  }

  public static boolean randomizeMemory(SWIGTYPE_p_void pMemory, long theSize) {
    return otapiJNI.OTPassword_randomizeMemory(SWIGTYPE_p_void.getCPtr(pMemory), theSize);
  }

  public static void zeroMemory(SWIGTYPE_p_void pMemory, long theSize) {
    otapiJNI.OTPassword_zeroMemory(SWIGTYPE_p_void.getCPtr(pMemory), theSize);
  }

  public static void copyMemory(SWIGTYPE_p_void pIn, long nIn, SWIGTYPE_p_void pOut, SWIGTYPE_p_size_t nOut) {
    otapiJNI.OTPassword_copyMemory(SWIGTYPE_p_void.getCPtr(pIn), nIn, SWIGTYPE_p_void.getCPtr(pOut), SWIGTYPE_p_size_t.getCPtr(nOut));
  }

  public OTPassword() {
    this(otapiJNI.new_OTPassword(), true);
  }

}
